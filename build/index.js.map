{"version":3,"file":"index.js","mappings":"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","sources":["webpack:///./src/enrollment.js","webpack:///./src/extend-core-button.js","webpack:///external window [\"wp\",\"blockEditor\"]","webpack:///external window [\"wp\",\"components\"]","webpack:///external window [\"wp\",\"element\"]","webpack:///external window [\"wp\",\"hooks\"]","webpack:///external window \"ReactJSXRuntime\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/index.js"],"sourcesContent":["import { addFilter, applyFilters } from '@wordpress/hooks';\r\n\r\n// This is the default enrollment message generator\r\nfunction displayEnrollment(userId, courseId) {\r\n\tconst message = applyFilters(\r\n\t\t'learnhooks.modifyEnrollmentMessage', // Hook name\r\n\t\t`User ${userId} enrolled in course ${courseId}`, // Default message\r\n\t\tuserId,\r\n\t\tcourseId\r\n\t);\r\n\r\n\tconsole.log(message);\r\n}\r\n\r\n// Simulate another script adding a filter to modify the message\r\naddFilter(\r\n\t'learnhooks.modifyEnrollmentMessage',       // Hook name (same as applyFilters)\r\n\t'my-plugin/emoji-modifier',                 // Unique namespace\r\n\t(message, userId, courseId) => {\r\n\t\treturn `${message} ðŸŽ‰`;\r\n\t}\r\n);\r\n\r\n// Trigger the enrollment logic\r\ndisplayEnrollment(101, 42);\r\n","/**\r\n * LearnHooks: Modern Gutenberg Extension Example\r\n *\r\n * Extend the core/button block with:\r\n * - A new \"dataTrackingId\" attribute\r\n * - A sidebar control to edit it\r\n * - Output of the attribute in the frontend HTML\r\n *\r\n * Same behavior as the HOC version, but written as a plain functional component.\r\n */\r\n\r\nimport { addFilter } from '@wordpress/hooks'; // Hook into Gutenberg filters\r\nimport { InspectorControls } from '@wordpress/block-editor'; // Sidebar controls\r\nimport { PanelBody, TextControl } from '@wordpress/components'; // UI components\r\nimport { Fragment } from '@wordpress/element'; // React fragment wrapper\r\n\r\n/**\r\n * STEP 1: Add a new attribute to core/button\r\n *\r\n * This runs *before* Gutenberg finishes registering the block.\r\n * It lets us inject new attributes into the block schema.\r\n *\r\n * - If the block name is `core/button`, append `dataTrackingId`\r\n * - Otherwise, leave it untouched\r\n */\r\nconst addCustomAttribute = (settings, name) => {\r\n    if (name !== 'core/button') return settings;\r\n\r\n    return {\r\n        ...settings,\r\n        attributes: {\r\n            ...settings.attributes,\r\n            dataTrackingId: {\r\n                type: 'string',\r\n                default: '',\r\n            },\r\n        },\r\n    };\r\n};\r\n\r\naddFilter(\r\n    'blocks.registerBlockType',             // Filter called during block registration\r\n    'learnhooks/add-button-tracking-attr', // Unique namespace for this modification\r\n    addCustomAttribute\r\n);\r\n\r\n/**\r\n * STEP 2: Add a custom sidebar control\r\n *\r\n * Normally, Gutenberg renders a default BlockEdit component.\r\n * We can hook into `editor.BlockEdit` and wrap it with our own UI.\r\n *\r\n * Instead of a HOC, we just write a **plain functional component**:\r\n *\r\n * - Checks if the current block is core/button\r\n * - If not, returns the original BlockEdit unchanged\r\n * - If yes:\r\n *    â†’ Renders the original BlockEdit\r\n *    â†’ Adds an InspectorControls panel with a TextControl\r\n */\r\nconst ButtonTrackingControls = (BlockEdit) => {\r\n    return (props) => {\r\n        const { name, attributes, setAttributes } = props;\r\n\r\n        // Only target core/button\r\n        if (name !== 'core/button') {\r\n            return <BlockEdit {...props} />;\r\n        }\r\n\r\n        const { dataTrackingId } = attributes;\r\n\r\n        return (\r\n            <Fragment>\r\n                {/* Render the default block editor UI */}\r\n                <BlockEdit {...props} />\r\n\r\n                {/* Add our sidebar control */}\r\n                <InspectorControls>\r\n                    <PanelBody title=\"Tracking ID\" initialOpen={false}>\r\n                        <TextControl\r\n                            label=\"Data Tracking ID\"\r\n                            help=\"This will be added as a data-tracking-id attribute in the frontend.\"\r\n                            value={dataTrackingId || ''}\r\n                            onChange={(val) => setAttributes({ dataTrackingId: val })}\r\n                        />\r\n                    </PanelBody>\r\n                </InspectorControls>\r\n            </Fragment>\r\n        );\r\n    };\r\n};\r\n\r\naddFilter(\r\n    'editor.BlockEdit',                     // Filter that lets us wrap the block edit UI\r\n    'learnhooks/button-tracking-controls', // Namespace\r\n    ButtonTrackingControls                 // Our plain function\r\n);\r\n\r\n/**\r\n * STEP 3: Modify the saved content\r\n *\r\n * When the block is saved, Gutenberg generates static HTML.\r\n * Without this step, the new attribute wouldnâ€™t appear in the frontend.\r\n *\r\n * - Runs for each block before final markup is generated\r\n * - If the block is core/button, we inject `data-tracking-id`\r\n */\r\nconst saveCustomAttribute = (extraProps, blockType, attributes) => {\r\n    if (blockType.name !== 'core/button') return extraProps;\r\n\r\n    if (attributes.dataTrackingId) {\r\n        extraProps['data-tracking-id'] = attributes.dataTrackingId;\r\n    }\r\n\r\n    return extraProps;\r\n};\r\n\r\naddFilter(\r\n    'blocks.getSaveContent.extraProps',    // Filter before saving block markup\r\n    'learnhooks/save-button-tracking-attr', // Namespace\r\n    saveCustomAttribute\r\n);\r\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// âœ… Include procedural block extensions\r\nimport './extend-core-button.js';\r\nimport './enrollment.js';"],"names":["addFilter","applyFilters","displayEnrollment","userId","courseId","message","console","log","InspectorControls","PanelBody","TextControl","Fragment","jsx","_jsx","jsxs","_jsxs","addCustomAttribute","settings","name","attributes","dataTrackingId","type","default","ButtonTrackingControls","BlockEdit","props","setAttributes","children","title","initialOpen","label","help","value","onChange","val","saveCustomAttribute","extraProps","blockType"],"sourceRoot":""}