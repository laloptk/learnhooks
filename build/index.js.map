{"version":3,"file":"index.js","mappings":"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","sources":["webpack:///./src/enrollment.js","webpack:///./src/extend-core-button.js","webpack:///./src/extensions/ImageBlockExtension.js","webpack:///./src/try-js-hooks.js","webpack:///./src/utils/AbstractBlockExtension.js","webpack:///external window [\"wp\",\"blockEditor\"]","webpack:///external window [\"wp\",\"components\"]","webpack:///external window [\"wp\",\"element\"]","webpack:///external window [\"wp\",\"hooks\"]","webpack:///external window \"ReactJSXRuntime\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/index.js"],"sourcesContent":["import { addFilter, applyFilters } from '@wordpress/hooks';\r\n\r\n// This is the default enrollment message generator\r\nfunction displayEnrollment(userId, courseId) {\r\n\tconst message = applyFilters(\r\n\t\t'learnhooks.modifyEnrollmentMessage', // Hook name\r\n\t\t`User ${userId} enrolled in course ${courseId}`, // Default message\r\n\t\tuserId,\r\n\t\tcourseId\r\n\t);\r\n\r\n\tconsole.log(message);\r\n}\r\n\r\n// Simulate another script adding a filter to modify the message\r\naddFilter(\r\n\t'learnhooks.modifyEnrollmentMessage',       // Hook name (same as applyFilters)\r\n\t'my-plugin/emoji-modifier',                 // Unique namespace\r\n\t(message, userId, courseId) => {\r\n\t\treturn `${message} ðŸŽ‰`;\r\n\t}\r\n);\r\n\r\n// Trigger the enrollment logic\r\ndisplayEnrollment(101, 42);\r\n","/**\r\n * LearnHooks: Modern Gutenberg Extension Example\r\n *\r\n * Extend the core/button block with:\r\n * - A new \"dataTrackingId\" attribute\r\n * - A sidebar control to edit it\r\n * - Output of the attribute in the frontend HTML\r\n *\r\n * Same behavior as the HOC version, but written as a plain functional component.\r\n */\r\n\r\nimport { addFilter } from '@wordpress/hooks'; // Hook into Gutenberg filters\r\nimport { InspectorControls } from '@wordpress/block-editor'; // Sidebar controls\r\nimport { PanelBody, TextControl } from '@wordpress/components'; // UI components\r\nimport { Fragment } from '@wordpress/element'; // React fragment wrapper\r\n\r\n/**\r\n * STEP 1: Add a new attribute to core/button\r\n *\r\n * This runs *before* Gutenberg finishes registering the block.\r\n * It lets us inject new attributes into the block schema.\r\n *\r\n * - If the block name is `core/button`, append `dataTrackingId`\r\n * - Otherwise, leave it untouched\r\n */\r\nconst addCustomAttribute = (settings, name) => {\r\n    if (name !== 'core/button') return settings;\r\n\r\n    return {\r\n        ...settings,\r\n        attributes: {\r\n            ...settings.attributes,\r\n            dataTrackingId: {\r\n                type: 'string',\r\n                default: '',\r\n            },\r\n        },\r\n    };\r\n};\r\n\r\naddFilter(\r\n    'blocks.registerBlockType',             // Filter called during block registration\r\n    'learnhooks/add-button-tracking-attr', // Unique namespace for this modification\r\n    addCustomAttribute\r\n);\r\n\r\n/**\r\n * STEP 2: Add a custom sidebar control\r\n *\r\n * Normally, Gutenberg renders a default BlockEdit component.\r\n * We can hook into `editor.BlockEdit` and wrap it with our own UI.\r\n *\r\n * Instead of a HOC, we just write a **plain functional component**:\r\n *\r\n * - Checks if the current block is core/button\r\n * - If not, returns the original BlockEdit unchanged\r\n * - If yes:\r\n *    â†’ Renders the original BlockEdit\r\n *    â†’ Adds an InspectorControls panel with a TextControl\r\n */\r\nconst ButtonTrackingControls = (BlockEdit) => {\r\n    return (props) => {\r\n        const { name, attributes, setAttributes } = props;\r\n\r\n        // Only target core/button\r\n        if (name !== 'core/button') {\r\n            return <BlockEdit {...props} />;\r\n        }\r\n\r\n        const { dataTrackingId } = attributes;\r\n\r\n        return (\r\n            <Fragment>\r\n                {/* Render the default block editor UI */}\r\n                <BlockEdit {...props} />\r\n\r\n                {/* Add our sidebar control */}\r\n                <InspectorControls>\r\n                    <PanelBody title=\"Tracking ID\" initialOpen={false}>\r\n                        <TextControl\r\n                            label=\"Data Tracking ID\"\r\n                            help=\"This will be added as a data-tracking-id attribute in the frontend.\"\r\n                            value={dataTrackingId || ''}\r\n                            onChange={(val) => setAttributes({ dataTrackingId: val })}\r\n                        />\r\n                    </PanelBody>\r\n                </InspectorControls>\r\n            </Fragment>\r\n        );\r\n    };\r\n};\r\n\r\naddFilter(\r\n    'editor.BlockEdit',                     // Filter that lets us wrap the block edit UI\r\n    'learnhooks/button-tracking-controls', // Namespace\r\n    ButtonTrackingControls                 // Our plain function\r\n);\r\n\r\n/**\r\n * STEP 3: Modify the saved content\r\n *\r\n * When the block is saved, Gutenberg generates static HTML.\r\n * Without this step, the new attribute wouldnâ€™t appear in the frontend.\r\n *\r\n * - Runs for each block before final markup is generated\r\n * - If the block is core/button, we inject `data-tracking-id`\r\n */\r\nconst saveCustomAttribute = (extraProps, blockType, attributes) => {\r\n    if (blockType.name !== 'core/button') return extraProps;\r\n\r\n    if (attributes.dataTrackingId) {\r\n        extraProps['data-tracking-id'] = attributes.dataTrackingId;\r\n    }\r\n\r\n    return extraProps;\r\n};\r\n\r\naddFilter(\r\n    'blocks.getSaveContent.extraProps',    // Filter before saving block markup\r\n    'learnhooks/save-button-tracking-attr', // Namespace\r\n    saveCustomAttribute\r\n);\r\n","import AbstractBlockExtension from '../utils/AbstractBlockExtension';\r\nimport { InspectorControls } from '@wordpress/block-editor'; // Sidebar controls\r\nimport { PanelBody, TextControl } from '@wordpress/components'; // UI components\r\n\r\nclass ImageBlockExtension extends AbstractBlockExtension {\r\n    constructor() {\r\n        super();\r\n\r\n        this.setNamespace = 'image-alt-source';\r\n\r\n        this.setBlockToExtend = 'core/image';\r\n\r\n        this.setControls = (props) => {\r\n            return (\r\n                <InspectorControls>\r\n                    <PanelBody>\r\n                        <TextControl \r\n                            label=\"Custom Alt Attribute\"\r\n                            value={props.attributes.customAlt || ''}\r\n                            onChange={(val) =>\r\n                                props.setAttributes({ customAlt: val })\r\n                            }\r\n                            __next40pxDefaultSize={true}\r\n                            __nextHasNoMarginBottom={true}\r\n                        />\r\n                    </PanelBody>\r\n                </InspectorControls>\r\n            )\r\n        };\r\n\r\n        this.setPropsModifier = (extraProps, attributes) => {\r\n            return {\r\n                ...extraProps,\r\n                'data-alt-source': attributes.customAlt || ''\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport default ImageBlockExtension;","import { addAction, addFilter } from '@wordpress/hooks';\r\n\r\n// âœ… Action BEFORE init\r\naddAction(\r\n    'learnhooks.beforeInit',\r\n    'learnhooks/try-before-init',\r\n    (namespace, blockToExtend) => { \r\n        console.log(\r\n            `About to initialize the init process for ${blockToExtend} with the namespace of ${namespace}`\r\n        );\r\n    }\r\n);\r\n\r\n// âœ… FILTER: must always return a value!\r\naddFilter(\r\n    'learnhooks.modifyAttributes',\r\n    'learnhooks/try-modifier',\r\n    (modifier, name, namespace) => {\r\n        console.log(\r\n            `The modifier was applied to ${name} with the namespace of ${namespace}`\r\n        );\r\n\r\n        // âœ… Always return the modified or original settings\r\n        return modifier;\r\n    }\r\n);\r\n\r\n// âœ… Action BEFORE rendering controls\r\naddAction(\r\n    'learnhooks.controlsRendered',\r\n    'learnhooks/try-hook-before-rendering-controls',\r\n    (namespace, props) => {\r\n        console.log('Action triggered before rendering the combined/modified controls.');\r\n    }\r\n);\r\n\r\n// âœ… Filter BEFORE saving props for HTML attribute in front-end\r\naddFilter(\r\n    'learnhooks.modifySaveProps', \r\n    'learnhooks/try-modified-props',\r\n    (modifiedProps, blockName, attributes, namespace) => {\r\n        console.log('Run this filter before saving the props that will show as HTML attributes in the front-end.');\r\n        return modifiedProps;\r\n    }\r\n)\r\n\r\n// âœ… Action AFTER init\r\naddAction(\r\n    'learnhooks.afterInit',\r\n    'learnhooks/try-after-init',\r\n    (namespace, blockToExtend) => { \r\n        console.log(\r\n            `The init process finished for ${blockToExtend}`\r\n        );\r\n    }\r\n);","import { addFilter, doAction, applyFilters } from '@wordpress/hooks'; // Hook into Gutenberg filters\r\n\r\nclass AbstractBlockExtension {\r\n    #namespace = null;\r\n    #blockToExtend = null;\r\n    #newControls = null;\r\n    #propsModifier = null;\r\n    \r\n    constructor() {\r\n        if (new.target === AbstractBlockExtension) {\r\n          throw new Error(\"Cannot instantiate AbstractBlockExtension directly.\");\r\n        }\r\n    }\r\n\r\n    init() {\r\n        const shouldInit = applyFilters(\r\n            'learnhooks.shouldInitExtension',\r\n            true,\r\n            this.#namespace,\r\n            this.#blockToExtend\r\n        );\r\n\r\n        if (!shouldInit) return; // skip if filter returns false\r\n\r\n        doAction('learnhooks.beforeInit', this.#namespace, this.#blockToExtend);\r\n\r\n        addFilter(\r\n            'blocks.registerBlockType',               // Filter called during block registration\r\n            `learnhooks/add-${this.#namespace}-attr`, // Unique namespace for this modification\r\n            this.addAttributes.bind(this)\r\n        );\r\n        \r\n        addFilter(\r\n            'editor.BlockEdit',                       // Filter that lets us wrap the block edit UI\r\n            `learnhooks/${this.#namespace}-controls`, // Namespace\r\n            this.addControls.bind(this)               // Our plain function\r\n        );\r\n\r\n        addFilter(\r\n            'blocks.getSaveContent.extraProps',        // Filter before saving block markup\r\n            `learnhooks/save-${this.#namespace}-attr`, // Namespace\r\n            this.addProps.bind(this)\r\n        );\r\n\r\n        doAction('learnhooks.afterInit', this.#namespace, this.#blockToExtend);\r\n    }\r\n\r\n    addAttributes(settings, name) {\r\n        let blockName = this.#blockToExtend;\r\n        \r\n        if(! blockName) {\r\n            throw new Error(\"The name of the block you want to extend is not valid.\");\r\n        } else if(name != blockName) {\r\n            return settings;\r\n        }\r\n\r\n        let modifiedSettings = {\r\n            ...settings,\r\n            attributes: {\r\n                ...settings.attributes,\r\n                customAlt: {\r\n                    type: 'string',\r\n                    default: '',\r\n                },\r\n            },\r\n        };\r\n\r\n        modifiedSettings = applyFilters(\r\n            'learnhooks.modifyAttributes',\r\n            modifiedSettings,\r\n            name,\r\n            this.#namespace\r\n        );\r\n\r\n        return modifiedSettings;\r\n    }\r\n\r\n    addControls(BlockEdit) {\r\n        return ( props ) => {\r\n            // Always render the default BlockEdit UI\r\n            const defaultUI = <BlockEdit {...props} />;\r\n\r\n            // If no custom controls were provided or the block type is not the one we want to extend, \r\n            // just return the default UI\r\n            if ( ! this.#newControls || props.name !== this.#blockToExtend) {\r\n                return defaultUI;\r\n            }\r\n\r\n            // Fire an action just before returning combined UI\r\n            doAction(\r\n                'learnhooks.controlsRendered',\r\n                this.#namespace,\r\n                props\r\n            );\r\n\r\n            // Otherwise, render default UI + user-provided controls (passing props!)\r\n            return (\r\n                <>\r\n                    { defaultUI }\r\n                    { this.#newControls( props ) }\r\n                </>\r\n            );\r\n        };\r\n    }\r\n\r\n    addProps(extraProps, blockType, attributes) {\r\n        // Only affect the targeted block\r\n        if (blockType.name !== this.#blockToExtend) {\r\n            return extraProps;\r\n        }\r\n\r\n        // If no custom prop modifier was provided, return unchanged\r\n        if (!this.#propsModifier || typeof this.#propsModifier !== 'function') {\r\n            return extraProps;\r\n        }\r\n\r\n        // Delegate to user-defined function for multiple modifications\r\n        let modifiedProps = this.#propsModifier(extraProps, attributes);\r\n\r\n         modifiedProps = applyFilters(\r\n            'learnhooks.modifySaveProps',\r\n            modifiedProps,          // current props\r\n            blockType.name,         // block name\r\n            attributes,             // block attributes\r\n            this.#namespace         // which extension applied this\r\n        );\r\n\r\n        // Ensure it still returns a valid object\r\n        return typeof modifiedProps === 'object' ? modifiedProps : extraProps;\r\n    }\r\n\r\n    set setNamespace(namespace) {\r\n        if(typeof namespace !== 'string') {\r\n            throw new Error('The namespace parameter must be a string');\r\n        }\r\n        \r\n        this.#namespace = namespace;\r\n    }\r\n\r\n    set setBlockToExtend(blockName) {\r\n        if(typeof blockName !== 'string') {\r\n            throw new Error('The blockName parameter must be a string');\r\n        }\r\n        \r\n        this.#blockToExtend = blockName;\r\n    }\r\n\r\n    set setControls(newControlsFn) {\r\n        if(typeof newControlsFn != 'function') {\r\n            throw new Error('setControls expects a function as parameter: (props) => JSX');\r\n        }\r\n\r\n        this.#newControls = newControlsFn;\r\n    }\r\n\r\n    set setPropsModifier(modifierFn) {\r\n        if (typeof modifierFn !== 'function') {\r\n            throw new Error(\r\n                'setPropsModifier expects a function: (extraProps, attributes) => modifiedProps'\r\n            );\r\n        }\r\n\r\n        this.#propsModifier = modifierFn;\r\n    }\r\n\r\n}\r\n\r\nexport default AbstractBlockExtension;","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// âœ… Include procedural block extensions\r\nimport './extend-core-button.js';\r\nimport './enrollment.js';\r\nimport './try-js-hooks.js';\r\n\r\n// Include block extensions\r\nimport ImageBlockExtension from './extensions/ImageBlockExtension.js';\r\n\r\nconst imgExtension = new ImageBlockExtension();\r\n\r\nimgExtension.init();"],"names":["addFilter","applyFilters","displayEnrollment","userId","courseId","message","console","log","InspectorControls","PanelBody","TextControl","Fragment","jsx","_jsx","jsxs","_jsxs","addCustomAttribute","settings","name","attributes","dataTrackingId","type","default","ButtonTrackingControls","BlockEdit","props","setAttributes","children","title","initialOpen","label","help","value","onChange","val","saveCustomAttribute","extraProps","blockType","AbstractBlockExtension","ImageBlockExtension","constructor","setNamespace","setBlockToExtend","setControls","customAlt","__next40pxDefaultSize","__nextHasNoMarginBottom","setPropsModifier","addAction","namespace","blockToExtend","modifier","modifiedProps","blockName","doAction","_Fragment","newControls","propsModifier","new","target","Error","init","shouldInit","addAttributes","bind","addControls","addProps","modifiedSettings","defaultUI","newControlsFn","modifierFn","imgExtension"],"sourceRoot":""}